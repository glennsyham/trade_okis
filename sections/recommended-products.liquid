{% assign ai_gen_id = 'aigenblock2f5b290' %}

{% style %}
  .product-tabs-{{ ai_gen_id }} {
    margin: 0 auto;
    padding: 0 20px;
    max-width: 100%;
  }
  .product-tabs-container-{{ ai_gen_id }} {
    max-width: {{ section.settings.container_width }}px;
    margin: 0 auto;
  }
  .tab-container-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    margin-bottom: 30px;
    gap: 8px;
  }
  .tab-button-{{ ai_gen_id }} {
    padding: 10px 20px;
    background-color: {{ section.settings.tab_bg_color }};
    color: {{ section.settings.tab_text_color }};
    border: none;
    border-radius: {{ section.settings.tab_border_radius }}px;
    cursor: pointer;
    font-size: 14px;
    font-weight: 500;
    transition: background-color 0.3s, color 0.3s;
  }
  .tab-button-{{ ai_gen_id }}.active {
    background-color: {{ section.settings.tab_active_bg_color }};
    color: {{ section.settings.tab_active_text_color }};
  }
  .tab-button-{{ ai_gen_id }}:hover {
    background-color: {{ section.settings.tab_hover_bg_color }};
    color: {{ section.settings.tab_hover_text_color }};
  }
  .products-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: {{ section.settings.grid_gap }}px;
    margin: 0 auto;
  }
  @media screen and (min-width: 750px) {
    .products-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat(3, 1fr);
    }
  }
  @media screen and (min-width: 990px) {
    .products-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat({{ section.settings.columns_desktop }}, 1fr);
    }
  }
  .product-card-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    height: 100%;
    position: relative;
  }
  .product-card-image-wrapper-{{ ai_gen_id }} {
    position: relative;
    margin-bottom: 12px;
    overflow: hidden;
    border-radius: {{ section.settings.image_border_radius }}px;
    aspect-ratio: 132/175;
    width: 100%;
  }
  .product-card-image-wrapper-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: opacity 0.4s ease;
    position: absolute;
    top: 0;
    left: 0;
  }
  .product-card-image-wrapper-{{ ai_gen_id }} img:first-child {
    position: relative;
    z-index: 1;
  }
  @media screen and (min-width: 750px) {
    /*
    .product-card-image-wrapper-{{ ai_gen_id }} img:last-child {
      opacity: 0;
    }
    .product-card-{{ ai_gen_id }}:hover .product-card-image-wrapper-{{ ai_gen_id }} img:last-child {
      opacity: 1;
      z-index: 2;
    }
    */

    .product-card-{{ ai_gen_id }}:hover .product-card-image-wrapper-{{ ai_gen_id }} > img:only-child {
      transition: transform var(--duration-long) ease;
    }


    .product-card-{{ ai_gen_id }}:hover .product-card-image-wrapper-{{ ai_gen_id }} > img:first-child:only-child {
      transform: scale(1.03);
    }

    .product-card-{{ ai_gen_id }}:hover .product-card-image-wrapper-{{ ai_gen_id }} > img:first-child:not(:only-child) {
      opacity: 0;
    }

    .product-card-{{ ai_gen_id }}:hover .product-card-image-wrapper-{{ ai_gen_id }} > img + img {
      opacity: 1;
      transition: transform var(--duration-long) ease;
      transform: scale(1.03);
    }
  }
  @media screen and (max-width: 749px) {
    .product-card-image-wrapper-{{ ai_gen_id }} img:last-child {
      opacity: 1;
      position: relative;
    }
    .product-card-image-wrapper-{{ ai_gen_id }} img:first-child {
      margin-bottom: 4px;
    }
  }
  .product-info-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    gap: 6px;
  }
  .product-title-{{ ai_gen_id }} {
    font-size: {{ section.settings.title_font_size }}px;
    font-weight: 500;
    margin: 0;
    color: {{ section.settings.title_color }};
    line-height: 1.3;
  }
  .price-container-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-top: auto;
  }
  .product-price-{{ ai_gen_id }} {
    font-size: {{ section.settings.price_font_size }}px;
    font-weight: 600;
    color: {{ section.settings.price_color }};
  }
  .compare-at-price-{{ ai_gen_id }} {
    text-decoration: line-through;
    color: {{ section.settings.compare_price_color }};
    margin-right: 8px;
    font-size: {{ section.settings.price_font_size | minus: 2 }}px;
  }
  .add-to-cart-button-{{ ai_gen_id }} {
    background-color: {{ section.settings.add_to_cart_bg_color }};
    color: {{ section.settings.add_to_cart_text_color }};
    border: none;
    border-radius: 50%;
    width: 36px;
    height: 36px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background-color 0.3s;
    padding: 0;
  }
  .add-to-cart-button-{{ ai_gen_id }}:hover {
    background-color: {{ section.settings.add_to_cart_hover_bg_color }};
  }
  .add-to-cart-button-{{ ai_gen_id }} svg {
    width: 18px;
    height: 18px;
  }
  .section-title-{{ ai_gen_id }} {
    text-align: center;
    margin-bottom: 20px;
    font-size: {{ section.settings.heading_font_size }}px;
    font-weight: 600;
    color: {{ section.settings.heading_color }};
  }
  .hidden-{{ ai_gen_id }} {
    display: none;
  }
{% endstyle %}
<div class="page-width">
  <product-tabs-{{ ai_gen_id }} class="product-tabs-{{ ai_gen_id }}" {{ section.shopify_attributes }}>
    <div class="product-tabs-container-{{ ai_gen_id }}">
      {% if section.settings.heading != blank %}
        <h2 class="section-title-{{ ai_gen_id }}">{{ section.settings.heading }}</h2>
      {% endif %}
      {% assign all_category = 'women,men,plus,kids,home,beauty' | split: ',' %}

      <div class="tab-container-{{ ai_gen_id }}">
        <button class="tab-button-{{ ai_gen_id }} active" data-category="all">
          {{ section.settings.view_all_text }}
        </button>

        {% for cat in all_category %}
          {% assign text_key = cat | append: '_category' %}
          {% assign text_label = cat | append: '_text' %}

          {% assign collection = section.settings[text_key] %}
          {% assign label = section.settings[text_label] %}
          {% if collection != blank %}
            <button class="tab-button-{{ ai_gen_id }}" data-category="{{ cat }}">{{ label }}</button>
          {% endif %}
        {% endfor %}
      </div>

      <div class="products-grid-{{ ai_gen_id }}">
        {% for cat in all_category %}
          {% assign text_key = cat | append: '_category' %}
          {% assign collection = section.settings[text_key] %}
          {% if collection != blank %}
            {% for product in collection.products limit: section.settings.products_per_category %}
              <div class="product-card-{{ ai_gen_id }}" data-category="{{ cat }}">
                <a href="{{ product.url }}">
                  <div class="product-card-image-wrapper-{{ ai_gen_id }} ">
                    {% if product.featured_image %}
                      <img
                        src="{{ product.featured_image | image_url: width: 264 }}"
                        alt="{{ product.title }}"
                        loading="lazy"
                        width="132"
                        height="175"
                        class="product-card-image-{{ ai_gen_id }}"
                      >
                    {% else %}
                      <div class="product-card-placeholder-{{ ai_gen_id }}">
                        {{ 'product-apparel-1' | placeholder_svg_tag }}
                      </div>
                    {% endif %}

                    {%- if product.media[1] != null %}
                      <img
                        src="{{ product.media[1] | image_url: width: 264 }}"
                        alt="{{ product.media[1].alt}}"
                        loading="lazy"
                        width="132"
                        height="175"
                        class="product-card-image-{{ ai_gen_id }}"
                      >
                    {% endif %}
                  </div>
                </a>
                <div class="product-info-{{ ai_gen_id }}">
                  <h3 class="product-title-{{ ai_gen_id }}">
                    <a href="{{ product.url }}">{{ product.title }}</a>
                  </h3>
                  <div class="price-container-{{ ai_gen_id }}">
                    <div>
                      {% if product.compare_at_price > product.price %}
                        <span class="compare-at-price-{{ ai_gen_id }}"
                          >₱{{ product.compare_at_price | money_without_currency -}}
                        </span>
                      {% endif %}
                      <span class="product-price-{{ ai_gen_id }}">₱{{ product.price | money_without_currency }}</span>
                    </div>
                    <button
                      class="add-to-cart-button-{{ ai_gen_id }}"
                      aria-label="Add {{ product.title }} to cart"
                      data-product-id="{{ product.id }}"
                      data-variant-id="{{ product.first_available_variant.id }}"
                    >
                      {{ 'icon-cart-round.svg' | inline_asset_content }}
                    </button>
                  </div>
                </div>
              </div>
            {% endfor %}
          {% endif %}
        {% endfor %}
      </div>
    </div>
  </product-tabs-{{ ai_gen_id }}>
</div>
<script>
  (function () {
    class ProductTabs extends HTMLElement {
      constructor() {
        super();
        this.tabButtons = this.querySelectorAll('.tab-button-{{ ai_gen_id }}');
        this.productCards = this.querySelectorAll('.product-card-{{ ai_gen_id }}');
        this.addToCartButtons = this.querySelectorAll('.add-to-cart-button-{{ ai_gen_id }}');
      }

      connectedCallback() {
        this.setupTabButtons();
        this.setupAddToCartButtons();
        this.filterProducts('all');
      }

      setupTabButtons() {
        this.tabButtons.forEach((button) => {
          button.addEventListener('click', () => {
            const category = button.dataset.category;
            this.tabButtons.forEach((btn) => btn.classList.remove('active'));
            button.classList.add('active');
            this.filterProducts(category);
          });
        });
      }

      filterProducts(category) {
        this.productCards.forEach((card) => {
          card.classList.toggle('hidden-{{ ai_gen_id }}', category !== 'all' && card.dataset.category !== category);
        });
      }

      setupAddToCartButtons() {
        this.addToCartButtons.forEach((button) => {
          button.addEventListener('click', (e) => {
            e.preventDefault();
            const variantId = button.dataset.variantId;
            if (!variantId) return;
            fetch('/cart/add.js', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ items: [{ id: variantId, quantity: 1 }] }),
            })
              .then((r) => r.json())
              .then(() => (window.refreshCart ? window.refreshCart() : location.reload()))
              .catch((err) => console.error('Cart Error:', err));
          });
        });
      }
    }
    customElements.define('product-tabs-{{ ai_gen_id }}', ProductTabs);
  })();
</script>

{% schema %}
{
  "name": "Recommended Products",
  "settings": [
    {
      "type": "header",
      "content": "Section Heading"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Shop by Category"
    },
    {
      "type": "range",
      "id": "heading_font_size",
      "min": 16,
      "max": 40,
      "step": 1,
      "unit": "px",
      "label": "Heading font size",
      "default": 24
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "container_width",
      "min": 800,
      "max": 1600,
      "step": 50,
      "unit": "px",
      "label": "Container width",
      "default": 1200
    },
    {
      "type": "header",
      "content": "Tab Categories"
    },
    {
      "type": "text",
      "id": "view_all_text",
      "label": "View All tab text",
      "default": "View All"
    },
    {
      "type": "text",
      "id": "women_text",
      "label": "Women tab text",
      "default": "Women"
    },
    {
      "type": "collection",
      "id": "women_category",
      "label": "Women's collection"
    },
    {
      "type": "text",
      "id": "men_text",
      "label": "Men tab text",
      "default": "Men"
    },
    {
      "type": "collection",
      "id": "men_category",
      "label": "Men's collection"
    },
    {
      "type": "text",
      "id": "plus_text",
      "label": "Plus tab text",
      "default": "Plus"
    },
    {
      "type": "collection",
      "id": "plus_category",
      "label": "Plus collection"
    },
    {
      "type": "text",
      "id": "kids_text",
      "label": "Kids tab text",
      "default": "Kids"
    },
    {
      "type": "collection",
      "id": "kids_category",
      "label": "Kids collection"
    },
    {
      "type": "text",
      "id": "home_text",
      "label": "Home & Living tab text",
      "default": "Home & Living"
    },
    {
      "type": "collection",
      "id": "home_category",
      "label": "Home & Living collection"
    },
    {
      "type": "text",
      "id": "beauty_text",
      "label": "Beauty & Health tab text",
      "default": "Beauty & Health"
    },
    {
      "type": "collection",
      "id": "beauty_category",
      "label": "Beauty & Health collection"
    },
    {
      "type": "range",
      "id": "products_per_category",
      "min": 2,
      "max": 12,
      "step": 1,
      "label": "Products per category",
      "default": 4
    },
    {
      "type": "header",
      "content": "Tab Styling"
    },
    {
      "type": "color",
      "id": "tab_bg_color",
      "label": "Tab background color",
      "default": "#f4f4f4"
    },
    {
      "type": "color",
      "id": "tab_text_color",
      "label": "Tab text color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "tab_active_bg_color",
      "label": "Active tab background color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "tab_active_text_color",
      "label": "Active tab text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "tab_hover_bg_color",
      "label": "Tab hover background color",
      "default": "#e0e0e0"
    },
    {
      "type": "color",
      "id": "tab_hover_text_color",
      "label": "Tab hover text color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "tab_border_radius",
      "min": 0,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Tab border radius",
      "default": 4
    },
    {
      "type": "header",
      "content": "Product Grid"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 2,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "Number of columns on desktop"
    },
    {
      "type": "range",
      "id": "grid_gap",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Grid spacing",
      "default": 20
    },
    {
      "type": "range",
      "id": "image_border_radius",
      "min": 0,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Image border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Product Card"
    },
    {
      "type": "range",
      "id": "title_font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Title font size",
      "default": 14
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "price_font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Price font size",
      "default": 14
    },
    {
      "type": "color",
      "id": "price_color",
      "label": "Price color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "compare_price_color",
      "label": "Compare at price color",
      "default": "#999999"
    },
    {
      "type": "color",
      "id": "add_to_cart_bg_color",
      "label": "Add to cart button color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "add_to_cart_text_color",
      "label": "Add to cart icon color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "add_to_cart_hover_bg_color",
      "label": "Add to cart hover color",
      "default": "#333333"
    }
  ],
  "presets": [
    {
      "name": "Recommended Products"
    }
  ]
}
{% endschema %}
